// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
// swift-module-flags: -target arm64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Playwire
import Foundation
import GoogleMobileAds
import Swift
import UIKit
import UserMessagingPlatform
@objc public protocol PWConfigFileLoader {
  @objc func getConfig() -> Playwire.PWAdUnitStoreConfig
}
@objc @objcMembers public class PWStringConfigFileLoader : ObjectiveC.NSObject, Playwire.PWConfigFileLoader {
  @objc public init(string: Swift.String)
  @objc public func getConfig() -> Playwire.PWAdUnitStoreConfig
  @objc override dynamic public init()
  @objc deinit
}
@objc @objcMembers public class PWResourceConfigFileLoader : ObjectiveC.NSObject, Playwire.PWConfigFileLoader {
  @objc public init(resource: Swift.String, withExtension ext: Swift.String)
  @objc public func getConfig() -> Playwire.PWAdUnitStoreConfig
  @objc override dynamic public init()
  @objc deinit
}
@objc public protocol PWInterstitialDelegate {
  @objc func interstitialDidReceiveAd(_ ad: Playwire.PWInterstitial)
  @objc func interstitialWillPresentScreen(_ interstitial: Playwire.PWInterstitial)
  @objc func interstitialDidFail(toPresentScreen interstitial: Playwire.PWInterstitial)
  @objc func interstitialWillDismissScreen(_ interstitial: Playwire.PWInterstitial)
  @objc func interstitialDidDismissScreen(_ interstitial: Playwire.PWInterstitial)
  @objc func interstitialWillLeaveApplication(_ interstitial: Playwire.PWInterstitial)
  @objc func interstitial(_ interstitial: Playwire.PWInterstitial, didFailToReceiveAdWithError error: Swift.String)
}
@objc @objcMembers public class PWInterstitial : ObjectiveC.NSObject {
  @objc weak public var delegate: Playwire.PWInterstitialDelegate?
  @objc public init(adUnitName: Swift.String, delegate: Playwire.PWInterstitialDelegate? = nil)
  @objc public func load()
  @objc public var isLoaded: Swift.Bool {
    @objc get
  }
  @objc public func show(fromViewController viewController: UIKit.UIViewController)
  @objc override dynamic public init()
  @objc deinit
}
extension PWInterstitial : GoogleMobileAds.GADInterstitialDelegate {
  @objc dynamic public func interstitialDidReceiveAd(_ ad: GoogleMobileAds.GADInterstitial)
  @objc dynamic public func interstitial(_ ad: GoogleMobileAds.GADInterstitial, didFailToReceiveAdWithError error: GoogleMobileAds.GADRequestError)
  @objc dynamic public func interstitialWillPresentScreen(_ ad: GoogleMobileAds.GADInterstitial)
  @objc dynamic public func interstitialDidFail(toPresentScreen ad: GoogleMobileAds.GADInterstitial)
  @objc dynamic public func interstitialWillDismissScreen(_ ad: GoogleMobileAds.GADInterstitial)
  @objc dynamic public func interstitialDidDismissScreen(_ ad: GoogleMobileAds.GADInterstitial)
  @objc dynamic public func interstitialWillLeaveApplication(_ ad: GoogleMobileAds.GADInterstitial)
}
@objc public protocol PWBannerViewDelegate {
  @objc func bannerViewDidReceiveAd(_ bannerView: Playwire.PWBannerView)
  @objc func bannerViewWillPresentScreen(_ bannerView: Playwire.PWBannerView)
  @objc func bannerViewWillDismissScreen(_ bannerView: Playwire.PWBannerView)
  @objc func bannerViewDidDismissScreen(_ bannerView: Playwire.PWBannerView)
  @objc func bannerViewWillLeaveApplication(_ bannerView: Playwire.PWBannerView)
  @objc func bannerView(_ bannerView: Playwire.PWBannerView, didFailToReceiveAdWithError error: Swift.String)
}
@objc @_hasMissingDesignatedInitializers @objcMembers public class PWBannerView : UIKit.UIView {
  @objc weak public var delegate: Playwire.PWBannerViewDelegate?
  @objc public init(adUnitName: Swift.String, delegate: Playwire.PWBannerViewDelegate? = nil)
  @objc public func load()
  @objc public var isLoaded: Swift.Bool {
    @objc get
  }
  @objc override dynamic public init(frame: CoreGraphics.CGRect)
  @objc deinit
}
extension PWBannerView : GoogleMobileAds.GADBannerViewDelegate {
  @objc dynamic public func adViewDidReceiveAd(_ bannerView: GoogleMobileAds.GADBannerView)
  @objc dynamic public func adView(_ bannerView: GoogleMobileAds.GADBannerView, didFailToReceiveAdWithError error: GoogleMobileAds.GADRequestError)
  @objc dynamic public func adViewWillPresentScreen(_ bannerView: GoogleMobileAds.GADBannerView)
  @objc dynamic public func adViewWillDismissScreen(_ bannerView: GoogleMobileAds.GADBannerView)
  @objc dynamic public func adViewDidDismissScreen(_ bannerView: GoogleMobileAds.GADBannerView)
  @objc dynamic public func adViewWillLeaveApplication(_ bannerView: GoogleMobileAds.GADBannerView)
}
@objc public protocol PWRewardedDelegate {
  @objc func rewardedDidLoad(_ rewarded: Playwire.PWRewarded)
  @objc func rewardedDidUserEarn(_ rewarded: Playwire.PWRewarded)
  @objc func rewardedDidPresent(_ rewarded: Playwire.PWRewarded)
  @objc func rewardedDidDismiss(_ rewarded: Playwire.PWRewarded)
  @objc func rewarded(_ rewarded: Playwire.PWRewarded, didFailToLoadWithError error: Swift.String)
  @objc func rewarded(_ rewarded: Playwire.PWRewarded, didFailToPresentWithError error: Swift.String)
}
@objc @objcMembers public class PWRewarded : ObjectiveC.NSObject {
  @objc weak public var delegate: Playwire.PWRewardedDelegate?
  @objc public init(adUnitName: Swift.String, delegate: Playwire.PWRewardedDelegate? = nil)
  @objc public func load()
  @objc public var isLoaded: Swift.Bool {
    @objc get
  }
  @objc public func show(fromViewController viewController: UIKit.UIViewController)
  @objc override dynamic public init()
  @objc deinit
}
extension PWRewarded : GoogleMobileAds.GADRewardedAdDelegate {
  @objc dynamic public func rewardedAd(_ rewardedAd: GoogleMobileAds.GADRewardedAd, userDidEarn reward: GoogleMobileAds.GADAdReward)
  @objc dynamic public func rewardedAd(_ rewardedAd: GoogleMobileAds.GADRewardedAd, didFailToPresentWithError error: Swift.Error)
  @objc dynamic public func rewardedAdDidPresent(_ rewardedAd: GoogleMobileAds.GADRewardedAd)
  @objc dynamic public func rewardedAdDidDismiss(_ rewardedAd: GoogleMobileAds.GADRewardedAd)
}
public typealias PWAdBid = [Swift.AnyHashable : Any]
@_hasMissingDesignatedInitializers public class PWAdBidderConfig {
  public var adUnit: Playwire.PWAdUnit
  public var adUnitConfig: Playwire.PWAdUnitConfig
  public var adServerConfig: Playwire.PWAdServerConfig
  public var onSuccess: () -> ()
  public var onFailure: () -> ()
  public var bid: Playwire.PWAdBid?
  @objc deinit
}
@objc @_inheritsConvenienceInitializers open class PWAdBidder : ObjectiveC.NSObject {
  public var config: Playwire.PWAdBidderConfig!
  @objc override required dynamic public init()
  open func load()
  @objc deinit
}
public struct PWAdSize : Swift.Decodable {
  public let width: Swift.Int
  public let height: Swift.Int
  public init(from decoder: Swift.Decoder) throws
}
public struct PWAdServerConfig : Swift.Decodable {
  public enum PWAdServerType : Swift.String, Swift.Hashable, Swift.Decodable {
    case Amazon
    case Prebid
    public init?(rawValue: Swift.String)
    public typealias RawValue = Swift.String
    public var rawValue: Swift.String {
      get
    }
  }
  public let name: Swift.String
  public let serverType: Playwire.PWAdServerConfig.PWAdServerType
  public let host: Swift.String?
  public let account: Swift.String?
  public let useGeo: Swift.Bool?
  public let isTest: Swift.Bool?
  public let timeout: Swift.Int?
  public init(from decoder: Swift.Decoder) throws
}
public struct PWAdUnitConfig : Swift.Decodable {
  public let serverConfig: Swift.String
  public let adUnitId: Swift.String
  public let adSizes: Swift.Array<Playwire.PWAdSize>?
  public init(from decoder: Swift.Decoder) throws
}
@_hasMissingDesignatedInitializers @objc public class PWAdUnitStoreConfig : ObjectiveC.NSObject, Swift.Decodable {
  @objc override dynamic public init()
  @objc deinit
  required public init(from decoder: Swift.Decoder) throws
}
public struct PWAdUnit : Swift.Decodable {
  public enum PWAdBidStrategyType : Swift.String, Swift.Decodable {
    case Priority
    case Combined
    public init?(rawValue: Swift.String)
    public typealias RawValue = Swift.String
    public var rawValue: Swift.String {
      get
    }
  }
  public enum PWAdMode : Swift.String, Swift.Decodable {
    case Banner
    case Interstitial
    case Rewarded
    public init?(rawValue: Swift.String)
    public typealias RawValue = Swift.String
    public var rawValue: Swift.String {
      get
    }
  }
  public let name: Swift.String
  public let adUnitConfigs: Swift.Array<Playwire.PWAdUnitConfig>?
  public let strategy: Playwire.PWAdUnit.PWAdBidStrategyType?
  public let mode: Playwire.PWAdUnit.PWAdMode
  public let autorefreshTime: Swift.Int?
  public let gadUnitId: Swift.String
  public let gadSizes: Swift.Array<Playwire.PWAdSize>?
  public init(from decoder: Swift.Decoder) throws
}
public struct PWAdMediatorConfig : Swift.Decodable {
  public enum PWAdMediatorType : Swift.String, Swift.Decodable {
    case AdColony
    case Vungle
    case Smaato
    public init?(rawValue: Swift.String)
    public typealias RawValue = Swift.String
    public var rawValue: Swift.String {
      get
    }
  }
  public let type: Playwire.PWAdMediatorConfig.PWAdMediatorType
  public let adcolony_appId: Swift.String?
  public let adcolony_zones: Swift.Array<Swift.String>?
  public let adcolony_showPrePopup: Swift.Bool?
  public let adcolony_showPostPopup: Swift.Bool?
  public let vungle_placements: Swift.Array<Swift.String>?
  public let vungle_userId: Swift.String?
  public let vungle_startMuted: Swift.Bool?
  public let smaato_gpsEnabled: Swift.Bool?
  public init(from decoder: Swift.Decoder) throws
}
@objc @_inheritsConvenienceInitializers open class PWAdMediator : ObjectiveC.NSObject {
  public var config: Playwire.PWAdMediatorConfig?
  @objc override required dynamic public init()
  open func initialize()
  open func enableGDPR()
  open func configure(request: GoogleMobileAds.GADRequest)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class PlaywireSDK : ObjectiveC.NSObject {
  @objc public static let shared: Playwire.PlaywireSDK
  @objc public var configLoader: Playwire.PWConfigFileLoader
  @objc public func initialize(viewController: UIKit.UIViewController, completionHandler: @escaping () -> Swift.Void)
  @objc public var adUnitsDictionary: [Swift.String : [Swift.String]] {
    @objc get
  }
  public func set(type: Playwire.PWAdBidder.Type, for serverType: Playwire.PWAdServerConfig.PWAdServerType)
  public func get(factoryFor serverType: Playwire.PWAdServerConfig.PWAdServerType) -> Playwire.PWAdBidder.Type?
  public func set(type: Playwire.PWAdMediator.Type, for mediatorType: Playwire.PWAdMediatorConfig.PWAdMediatorType)
  @objc open func configure(request: GoogleMobileAds.GADRequest)
  @objc override dynamic public init()
  @objc deinit
}
extension Playwire.PWAdServerConfig.PWAdServerType : Swift.RawRepresentable {}
extension Playwire.PWAdUnit.PWAdBidStrategyType : Swift.Equatable {}
extension Playwire.PWAdUnit.PWAdBidStrategyType : Swift.Hashable {}
extension Playwire.PWAdUnit.PWAdBidStrategyType : Swift.RawRepresentable {}
extension Playwire.PWAdUnit.PWAdMode : Swift.Equatable {}
extension Playwire.PWAdUnit.PWAdMode : Swift.Hashable {}
extension Playwire.PWAdUnit.PWAdMode : Swift.RawRepresentable {}
extension Playwire.PWAdMediatorConfig.PWAdMediatorType : Swift.Equatable {}
extension Playwire.PWAdMediatorConfig.PWAdMediatorType : Swift.Hashable {}
extension Playwire.PWAdMediatorConfig.PWAdMediatorType : Swift.RawRepresentable {}
