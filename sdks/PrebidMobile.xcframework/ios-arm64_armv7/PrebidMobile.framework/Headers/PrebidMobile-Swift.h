#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
#ifndef PREBIDMOBILE_SWIFT_H
#define PREBIDMOBILE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="PrebidMobile",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSString;
enum ResultCode : NSInteger;
@class NSNumber;
@class PBAdUnitContentObject;

SWIFT_CLASS("_TtC12PrebidMobile6AdUnit")
@interface AdUnit : NSObject
@property (nonatomic, copy) NSString * _Nullable pbAdSlot;
- (void)fetchDemandWithCompletion:(void (^ _Nonnull)(enum ResultCode, NSDictionary<NSString *, NSString *> * _Nullable))completion;
- (void)fetchDemandWithAdObject:(id _Nonnull)adObject completion:(void (^ _Nonnull)(enum ResultCode))completion;
/// This method obtains the context data keyword & value for adunit context targeting
/// if the key already exists the value will be appended to the list. No duplicates will be added
- (void)addContextDataWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
/// This method obtains the context data keyword & values for adunit context targeting
/// the values if the key already exist will be replaced with the new set of values
- (void)updateContextDataWithKey:(NSString * _Nonnull)key value:(NSSet<NSString *> * _Nonnull)value;
/// This method allows to remove specific context data keyword & values set from adunit context targeting
- (void)removeContextDataForKey:(NSString * _Nonnull)forKey;
/// This method allows to remove all context data set from adunit context targeting
- (void)clearContextData;
/// This method obtains the context keyword for adunit context targeting
/// Inserts the given element in the set if it is not already present.
- (void)addContextKeyword:(NSString * _Nonnull)newElement;
/// This method obtains the context keyword set for adunit context targeting
/// Adds the elements of the given set to the set.
- (void)addContextKeywords:(NSSet<NSString *> * _Nonnull)newElements;
/// This method allows to remove specific context keyword from adunit context targeting
- (void)removeContextKeyword:(NSString * _Nonnull)element;
/// This method allows to remove all keywords from the set of adunit context targeting
- (void)clearContextKeywords;
/// This method allows to set the auto refresh period for the demand
/// \param time refresh time interval
///
- (void)setAutoRefreshMillisWithTime:(double)time;
/// This method stops the auto refresh of demand
- (void)stopAutoRefresh;
- (void)setAppContentWithAppContent:(PBAdUnitContentObject * _Nonnull)appContent;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIView;

SWIFT_CLASS("_TtC12PrebidMobile11AdViewUtils")
@interface AdViewUtils : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (void)findPrebidCreativeSize:(UIView * _Nonnull)adView success:(void (^ _Nonnull)(CGSize))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
@end

@class PBBannerAdUnitParameters;

SWIFT_CLASS("_TtC12PrebidMobile16BannerBaseAdUnit")
@interface BannerBaseAdUnit : AdUnit
@property (nonatomic, strong) PBBannerAdUnitParameters * _Nullable parameters;
@end

@class PBApi;

/// Describes an <a href="https://www.iab.com/wp-content/uploads/2016/03/OpenRTB-API-Specification-Version-2-5-FINAL.pdf">OpenRTB</a> banner object
SWIFT_CLASS_NAMED("Parameters")
@interface PBBannerAdUnitParameters : NSObject
/// List of supported API frameworks for this impression. If an API is not explicitly listed, it is assumed not to be supported.
@property (nonatomic, copy) NSArray<PBApi *> * _Nullable api;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile12BannerAdUnit")
@interface BannerAdUnit : BannerBaseAdUnit
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId size:(CGSize)size OBJC_DESIGNATED_INITIALIZER;
- (void)addAdditionalSizeWithSizes:(NSArray<NSValue *> * _Nonnull)sizes;
@end



/// Describes an <a href="https://www.iab.com/wp-content/uploads/2016/03/OpenRTB-API-Specification-Version-2-5-FINAL.pdf">OpenRTB</a> app: content object
SWIFT_CLASS_NAMED("ContentObject")
@interface PBAdUnitContentObject : NSObject
@property (nonatomic, copy) NSString * _Nullable url;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile18SingleContainerInt")
@interface SingleContainerInt : NSObject
@property (nonatomic, readonly) NSInteger value;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12PrebidMobile14ContextSubType")
@interface ContextSubType : SingleContainerInt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull General;)
+ (ContextSubType * _Nonnull)General SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull Article;)
+ (ContextSubType * _Nonnull)Article SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull Video;)
+ (ContextSubType * _Nonnull)Video SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull Audio;)
+ (ContextSubType * _Nonnull)Audio SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull Image;)
+ (ContextSubType * _Nonnull)Image SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull UserGenerated;)
+ (ContextSubType * _Nonnull)UserGenerated SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull Social;)
+ (ContextSubType * _Nonnull)Social SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull email;)
+ (ContextSubType * _Nonnull)email SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull chatIM;)
+ (ContextSubType * _Nonnull)chatIM SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull SellingProduct;)
+ (ContextSubType * _Nonnull)SellingProduct SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull AppStore;)
+ (ContextSubType * _Nonnull)AppStore SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull ReviewSite;)
+ (ContextSubType * _Nonnull)ReviewSite SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull Custom;)
+ (ContextSubType * _Nonnull)Custom SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile11ContextType")
@interface ContextType : SingleContainerInt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextType * _Nonnull Content;)
+ (ContextType * _Nonnull)Content SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextType * _Nonnull Social;)
+ (ContextType * _Nonnull)Social SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextType * _Nonnull Product;)
+ (ContextType * _Nonnull)Product SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextType * _Nonnull Custom;)
+ (ContextType * _Nonnull)Custom SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, DataAsset, open) {
  DataAssetSponsored = 1,
  DataAssetDescription = 2,
  DataAssetRating = 3,
  DataAssetLikes = 4,
  DataAssetDownloads = 5,
  DataAssetPrice = 6,
  DataAssetSaleprice = 7,
  DataAssetPhone = 8,
  DataAssetAddress = 9,
  DataAssetDescription2 = 10,
  DataAssetDisplayurl = 11,
  DataAssetCtatext = 12,
  DataAssetCustom = 13,
};


SWIFT_CLASS("_TtC12PrebidMobile13EventTracking")
@interface EventTracking : SingleContainerInt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventTracking * _Nonnull Image;)
+ (EventTracking * _Nonnull)Image SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventTracking * _Nonnull js;)
+ (EventTracking * _Nonnull)js SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventTracking * _Nonnull Custom;)
+ (EventTracking * _Nonnull)Custom SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile9EventType")
@interface EventType : SingleContainerInt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventType * _Nonnull Impression;)
+ (EventType * _Nonnull)Impression SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventType * _Nonnull ViewableImpression50;)
+ (EventType * _Nonnull)ViewableImpression50 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventType * _Nonnull ViewableImpression100;)
+ (EventType * _Nonnull)ViewableImpression100 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventType * _Nonnull ViewableVideoImpression50;)
+ (EventType * _Nonnull)ViewableVideoImpression50 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventType * _Nonnull Custom;)
+ (EventType * _Nonnull)Custom SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end

@class NSCoder;

/// Defines the User Id Object from an External Thrid Party Source
SWIFT_CLASS("_TtC12PrebidMobile14ExternalUserId")
@interface ExternalUserId : NSObject <NSCoding>
@property (nonatomic, copy) NSString * _Nonnull source;
@property (nonatomic, copy) NSString * _Nonnull identifier;
@property (nonatomic, strong) NSNumber * _Nullable atype;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable ext;
/// Initialize ExternalUserId Class
/// \param source Source of the External User Id String.
///
/// \param identifier String of the External User Id.
///
/// \param atype (Optional) Int of the External User Id.
///
/// \param ext (Optional) Dictionary of the External User Id.
///
- (nonnull instancetype)initWithSource:(NSString * _Nonnull)source identifier:(NSString * _Nonnull)identifier atype:(NSNumber * _Nullable)atype ext:(NSDictionary<NSString *, id> * _Nullable)ext OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, Gender, open) {
  GenderUnknown = 0,
  GenderMale = 1,
  GenderFemale = 2,
};

typedef SWIFT_ENUM(NSInteger, IMAAdSlotSize, open) {
  IMAAdSlotSizeSize400x300 = 0,
  IMAAdSlotSizeSize640x480 = 1,
};


SWIFT_CLASS("_TtC12PrebidMobile8IMAUtils")
@interface IMAUtils : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) IMAUtils * _Nonnull shared;)
+ (IMAUtils * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12PrebidMobile10ImageAsset")
@interface ImageAsset : SingleContainerInt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ImageAsset * _Nonnull Icon;)
+ (ImageAsset * _Nonnull)Icon SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ImageAsset * _Nonnull Main;)
+ (ImageAsset * _Nonnull)Main SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextType * _Nonnull Custom;)
+ (ContextType * _Nonnull)Custom SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile18InterstitialAdUnit")
@interface InterstitialAdUnit : BannerBaseAdUnit
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId minWidthPerc:(NSInteger)minWidthPerc minHeightPerc:(NSInteger)minHeightPerc;
@end

typedef SWIFT_ENUM(NSInteger, LogLevel_, open) {
  LogLevel_Debug = 0,
  LogLevel_Verbose = 1,
  LogLevel_Info = 2,
  LogLevel_Warn = 3,
  LogLevel_Error = 4,
  LogLevel_Severe = 5,
};

@protocol NativeAdEventDelegate;

SWIFT_CLASS("_TtC12PrebidMobile8NativeAd")
@interface NativeAd : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable title;
@property (nonatomic, readonly, copy) NSString * _Nullable text;
@property (nonatomic, readonly, copy) NSString * _Nullable iconUrl;
@property (nonatomic, readonly, copy) NSString * _Nullable imageUrl;
@property (nonatomic, readonly, copy) NSString * _Nullable callToAction;
@property (nonatomic, readonly, copy) NSString * _Nullable sponsoredBy;
@property (nonatomic, weak) id <NativeAdEventDelegate> _Nullable delegate;
+ (NativeAd * _Nullable)createWithCacheId:(NSString * _Nonnull)cacheId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (BOOL)registerViewWithView:(UIView * _Nonnull)view clickableViews:(NSArray<UIView *> * _Nullable)clickableViews;
@end


SWIFT_PROTOCOL("_TtP12PrebidMobile16NativeAdDelegate_")
@protocol NativeAdDelegate
/// A successful Prebid Native ad is returned
/// @param ad use this instance for displaying
- (void)nativeAdLoadedWithAd:(NativeAd * _Nonnull)ad;
/// Prebid Native was not found in the server returned response,
/// Please display the ad as regular ways
- (void)nativeAdNotFound;
/// Prebid Native ad was returned, however, the bid is not valid for displaying
/// Should be treated as on ad load failed
- (void)nativeAdNotValid;
@end


SWIFT_PROTOCOL("_TtP12PrebidMobile21NativeAdEventDelegate_")
@protocol NativeAdEventDelegate
@optional
/// Sent when the native ad is expired.
- (void)adDidExpireWithAd:(NativeAd * _Nonnull)ad;
/// Sent when the native view is clicked by the user.
- (void)adWasClickedWithAd:(NativeAd * _Nonnull)ad;
/// Sent when  an impression is recorded for an native ad
- (void)adDidLogImpressionWithAd:(NativeAd * _Nonnull)ad;
@end


SWIFT_CLASS("_TtC12PrebidMobile11NativeAsset")
@interface NativeAsset : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12PrebidMobile15NativeAssetData")
@interface NativeAssetData : NativeAsset
@property (nonatomic, strong) id _Nullable ext;
- (nonnull instancetype)initWithType:(enum DataAsset)type required:(BOOL)required OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithIsRequired:(BOOL)isRequired SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12PrebidMobile16NativeAssetImage")
@interface NativeAssetImage : NativeAsset
@property (nonatomic, strong) ImageAsset * _Nullable type;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable mimes;
@property (nonatomic, strong) id _Nullable ext;
- (nonnull instancetype)initWithMinimumWidth:(NSInteger)minimumWidth minimumHeight:(NSInteger)minimumHeight required:(BOOL)required;
- (nonnull instancetype)initWithIsRequired:(BOOL)isRequired OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile16NativeAssetTitle")
@interface NativeAssetTitle : NativeAsset
@property (nonatomic, strong) id _Nullable ext;
- (nonnull instancetype)initWithLength:(NSInteger)length required:(BOOL)required OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithIsRequired:(BOOL)isRequired SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12PrebidMobile18NativeEventTracker")
@interface NativeEventTracker : NSObject
- (nonnull instancetype)initWithEvent:(EventType * _Nonnull)event methods:(NSArray<EventTracking *> * _Nonnull)methods OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class PlacementType;

SWIFT_CLASS("_TtC12PrebidMobile13NativeRequest")
@interface NativeRequest : AdUnit
@property (nonatomic, strong) ContextType * _Nullable context;
@property (nonatomic, strong) ContextSubType * _Nullable contextSubType;
@property (nonatomic, strong) PlacementType * _Nullable placementType;
@property (nonatomic) NSInteger placementCount;
@property (nonatomic) NSInteger sequence;
@property (nonatomic, copy) NSArray<NativeAsset *> * _Nullable assets;
@property (nonatomic) NSInteger asseturlsupport;
@property (nonatomic) NSInteger durlsupport;
@property (nonatomic, copy) NSArray<NativeEventTracker *> * _Nullable eventtrackers;
@property (nonatomic) NSInteger privacy;
@property (nonatomic, strong) id _Nullable ext;
@property (nonatomic, copy) NSString * _Nullable configId;
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId assets:(NSArray<NativeAsset *> * _Nonnull)assets;
- (NSDictionary * _Nullable)getNativeRequestObject SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC12PrebidMobile13PlacementType")
@interface PlacementType : SingleContainerInt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PlacementType * _Nonnull FeedContent;)
+ (PlacementType * _Nonnull)FeedContent SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PlacementType * _Nonnull AtomicContent;)
+ (PlacementType * _Nonnull)AtomicContent SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PlacementType * _Nonnull OutsideContent;)
+ (PlacementType * _Nonnull)OutsideContent SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PlacementType * _Nonnull RecommendationWidget;)
+ (PlacementType * _Nonnull)RecommendationWidget SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PlacementType * _Nonnull Custom;)
+ (PlacementType * _Nonnull)Custom SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end

enum PrebidHost : NSInteger;

SWIFT_CLASS("_TtC12PrebidMobile6Prebid")
@interface Prebid : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull bidderNameAppNexus;)
+ (NSString * _Nonnull)bidderNameAppNexus SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull bidderNameRubiconProject;)
+ (NSString * _Nonnull)bidderNameRubiconProject SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) NSInteger timeoutMillis;
@property (nonatomic, copy) NSString * _Nonnull prebidServerAccountId;
@property (nonatomic, copy) NSString * _Nonnull storedAuctionResponse;
@property (nonatomic) BOOL pbsDebug;
/// <ul>
///   <li>
///     This property is set by the developer when he is willing to assign the assetID for Native ad.
///   </li>
///   <li>
///   </li>
/// </ul>
@property (nonatomic) BOOL shouldAssignNativeAssetID;
/// <ul>
///   <li>
///     This property is set by the developer when he is willing to share the location for better ad targeting
///   </li>
///   <li>
///   </li>
/// </ul>
@property (nonatomic) BOOL shareGeoLocation;
@property (nonatomic) enum PrebidHost prebidServerHost;
/// Array  containing objects that hold External UserId parameters.
@property (nonatomic, copy) NSArray<ExternalUserId *> * _Nonnull externalUserIdArray;
- (void)setLogLevel:(enum LogLevel_)logLevel;
/// The class is created as a singleton object & used
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) Prebid * _Nonnull shared;)
+ (Prebid * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// The initializer that needs to be created only once
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (BOOL)setCustomPrebidServerWithUrl:(NSString * _Nonnull)url error:(NSError * _Nullable * _Nullable)error;
- (void)addStoredBidResponseWithBidder:(NSString * _Nonnull)bidder responseId:(NSString * _Nonnull)responseId;
- (void)clearStoredBidResponses;
@end

typedef SWIFT_ENUM(NSInteger, PrebidHost, open) {
/// URL <a href="URL">https://prebid.adnxs.com/pbs/v1/openrtb2/auction</a>
  PrebidHostAppnexus = 0,
/// URL <a href="URL">https://prebid-server.rubiconproject.com/openrtb2/auction</a>
  PrebidHostRubicon = 1,
  PrebidHostCustom = 2,
};

typedef SWIFT_ENUM(NSInteger, ResultCode, open) {
  ResultCodePrebidDemandFetchSuccess = 0,
  ResultCodePrebidServerNotSpecified = 1,
  ResultCodePrebidInvalidAccountId = 2,
  ResultCodePrebidInvalidConfigId = 3,
  ResultCodePrebidInvalidSize = 4,
  ResultCodePrebidNetworkError = 5,
  ResultCodePrebidServerURLInvalid = 6,
  ResultCodePrebidServerError = 7,
  ResultCodePrebidDemandNoBids = 8,
  ResultCodePrebidDemandTimedOut = 9,
};

@class PBVideoAdUnitParameters;

SWIFT_CLASS("_TtC12PrebidMobile15VideoBaseAdUnit")
@interface VideoBaseAdUnit : AdUnit
@property (nonatomic, strong) PBVideoAdUnitParameters * _Nullable parameters;
@end

@class PBPlaybackMethod;
@class PBProtocols;
@class PBStartDelay;
@class PBPlacement;

/// Describes an <a href="https://www.iab.com/wp-content/uploads/2016/03/OpenRTB-API-Specification-Version-2-5-FINAL.pdf">OpenRTB</a> video object
SWIFT_CLASS_NAMED("Parameters")
@interface PBVideoAdUnitParameters : NSObject
/// List of supported API frameworks for this impression. If an API is not explicitly listed, it is assumed not to be supported.
@property (nonatomic, copy) NSArray<PBApi *> * _Nullable api;
/// Maximum bit rate in Kbps.
@property (nonatomic, strong) SingleContainerInt * _Nullable maxBitrate;
/// Maximum bit rate in Kbps.
@property (nonatomic, strong) SingleContainerInt * _Nullable minBitrate;
/// Maximum video ad duration in seconds.
@property (nonatomic, strong) SingleContainerInt * _Nullable maxDuration;
/// Minimum video ad duration in seconds.
@property (nonatomic, strong) SingleContainerInt * _Nullable minDuration;
/// Content MIME types supported
/// <h1>Example</h1>
/// <ul>
///   <li>
///     “video/mp4”
///   </li>
///   <li>
///     “video/x-ms-wmv”
///   </li>
/// </ul>
@property (nonatomic, copy) NSArray<NSString *> * _Nullable mimes;
/// Allowed playback methods. If none specified, assume all are allowed.
@property (nonatomic, copy) NSArray<PBPlaybackMethod *> * _Nullable playbackMethod;
/// Array of supported video bid response protocols.
@property (nonatomic, copy) NSArray<PBProtocols *> * _Nullable protocols;
/// Indicates the start delay in seconds for pre-roll, mid-roll, or post-roll ad placements.
@property (nonatomic, strong) PBStartDelay * _Nullable startDelay;
/// Placement type for the impression.
@property (nonatomic, strong) PBPlacement * _Nullable placement;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile19RewardedVideoAdUnit")
@interface RewardedVideoAdUnit : VideoBaseAdUnit
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile7Signals")
@interface Signals : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// <h1>OpenRTB - API Frameworks</h1>
/// \code
/// | Value | Description |
/// |-------|-------------|
/// | 1     | VPAID 1.0   |
/// | 2     | VPAID 2.0   |
/// | 3     | MRAID-1     |
/// | 4     | ORMMA       |
/// | 5     | MRAID-2     |
/// | 6     | MRAID-3     |
/// | 7     | OMID-1      |
///
/// \endcode
SWIFT_CLASS_NAMED("Api")
@interface PBApi : SingleContainerInt
/// VPAID 1.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBApi * _Nonnull VPAID_1;)
+ (PBApi * _Nonnull)VPAID_1 SWIFT_WARN_UNUSED_RESULT;
/// VPAID 2.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBApi * _Nonnull VPAID_2;)
+ (PBApi * _Nonnull)VPAID_2 SWIFT_WARN_UNUSED_RESULT;
/// MRAID-1
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBApi * _Nonnull MRAID_1;)
+ (PBApi * _Nonnull)MRAID_1 SWIFT_WARN_UNUSED_RESULT;
/// ORMMA
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBApi * _Nonnull ORMMA;)
+ (PBApi * _Nonnull)ORMMA SWIFT_WARN_UNUSED_RESULT;
/// MRAID-2
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBApi * _Nonnull MRAID_2;)
+ (PBApi * _Nonnull)MRAID_2 SWIFT_WARN_UNUSED_RESULT;
/// MRAID-3
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBApi * _Nonnull MRAID_3;)
+ (PBApi * _Nonnull)MRAID_3 SWIFT_WARN_UNUSED_RESULT;
/// OMID-1
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBApi * _Nonnull OMID_1;)
+ (PBApi * _Nonnull)OMID_1 SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


/// <h1>OpenRTB - Playback Methods</h1>
/// \code
/// | Value | Description                                              |
/// |-------|----------------------------------------------------------|
/// | 1     | Initiates on Page Load with Sound On                     |
/// | 2     | Initiates on Page Load with Sound Off by Default         |
/// | 3     | Initiates on Click with Sound On                         |
/// | 4     | Initiates on Mouse-Over with Sound On                    |
/// | 5     | Initiates on Entering Viewport with Sound On             |
/// | 6     | Initiates on Entering Viewport with Sound Off by Default |
///
/// \endcode
SWIFT_CLASS_NAMED("PlaybackMethod")
@interface PBPlaybackMethod : SingleContainerInt
/// Initiates on Page Load with Sound On
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlaybackMethod * _Nonnull AutoPlaySoundOn;)
+ (PBPlaybackMethod * _Nonnull)AutoPlaySoundOn SWIFT_WARN_UNUSED_RESULT;
/// Initiates on Page Load with Sound Off by Default
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlaybackMethod * _Nonnull AutoPlaySoundOff;)
+ (PBPlaybackMethod * _Nonnull)AutoPlaySoundOff SWIFT_WARN_UNUSED_RESULT;
/// Initiates on Click with Sound On
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlaybackMethod * _Nonnull ClickToPlay;)
+ (PBPlaybackMethod * _Nonnull)ClickToPlay SWIFT_WARN_UNUSED_RESULT;
/// Initiates on Mouse-Over with Sound On
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlaybackMethod * _Nonnull MouseOver;)
+ (PBPlaybackMethod * _Nonnull)MouseOver SWIFT_WARN_UNUSED_RESULT;
/// Initiates on Entering Viewport with Sound On
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlaybackMethod * _Nonnull EnterSoundOn;)
+ (PBPlaybackMethod * _Nonnull)EnterSoundOn SWIFT_WARN_UNUSED_RESULT;
/// Initiates on Entering Viewport with Sound Off by Default
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlaybackMethod * _Nonnull EnterSoundOff;)
+ (PBPlaybackMethod * _Nonnull)EnterSoundOff SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


/// <h1>OpenRTB - Protocols</h1>
/// \code
/// | Value | Description       |
/// |-------|-------------------|
/// | 1     | VAST 1.0          |
/// | 2     | VAST 2.0          |
/// | 3     | VAST 3.0          |
/// | 4     | VAST 1.0 Wrapper  |
/// | 5     | VAST 2.0 Wrapper  |
/// | 6     | VAST 3.0 Wrapper  |
/// | 7     | VAST 4.0          |
/// | 8     | VAST 4.0 Wrapper  |
/// | 9     | DAAST 1.0         |
/// | 10    | DAAST 1.0 Wrapper |
///
/// \endcode
SWIFT_CLASS_NAMED("Protocols")
@interface PBProtocols : SingleContainerInt
/// VAST 1.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_1_0;)
+ (PBProtocols * _Nonnull)VAST_1_0 SWIFT_WARN_UNUSED_RESULT;
/// VAST 2.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_2_0;)
+ (PBProtocols * _Nonnull)VAST_2_0 SWIFT_WARN_UNUSED_RESULT;
/// VAST 3.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_3_0;)
+ (PBProtocols * _Nonnull)VAST_3_0 SWIFT_WARN_UNUSED_RESULT;
/// VAST 1.0 Wrapper
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_1_0_Wrapper;)
+ (PBProtocols * _Nonnull)VAST_1_0_Wrapper SWIFT_WARN_UNUSED_RESULT;
/// VAST 2.0 Wrapper
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_2_0_Wrapper;)
+ (PBProtocols * _Nonnull)VAST_2_0_Wrapper SWIFT_WARN_UNUSED_RESULT;
/// VAST 3.0 Wrapper
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_3_0_Wrapper;)
+ (PBProtocols * _Nonnull)VAST_3_0_Wrapper SWIFT_WARN_UNUSED_RESULT;
/// VAST 4.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_4_0;)
+ (PBProtocols * _Nonnull)VAST_4_0 SWIFT_WARN_UNUSED_RESULT;
/// VAST 4.0 Wrapper
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_4_0_Wrapper;)
+ (PBProtocols * _Nonnull)VAST_4_0_Wrapper SWIFT_WARN_UNUSED_RESULT;
/// DAAST 1.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull DAAST_1_0;)
+ (PBProtocols * _Nonnull)DAAST_1_0 SWIFT_WARN_UNUSED_RESULT;
/// DAAST 1.0 Wrapper
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull DAAST_1_0_WRAPPER;)
+ (PBProtocols * _Nonnull)DAAST_1_0_WRAPPER SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


/// <h1>OpenRTB - Start Delay</h1>
/// \code
/// | Value | Description                                      |
/// |-------|--------------------------------------------------|
/// | > 0   | Mid-Roll (value indicates start delay in second) |
/// | 0     | Pre-Roll                                         |
/// | -1    | Generic Mid-Roll                                 |
/// | -2    | Generic Post-Roll                                |
///
/// \endcode
SWIFT_CLASS_NAMED("StartDelay")
@interface PBStartDelay : SingleContainerInt
/// Pre-Roll
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBStartDelay * _Nonnull PreRoll;)
+ (PBStartDelay * _Nonnull)PreRoll SWIFT_WARN_UNUSED_RESULT;
/// Generic Mid-Roll
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBStartDelay * _Nonnull GenericMidRoll;)
+ (PBStartDelay * _Nonnull)GenericMidRoll SWIFT_WARN_UNUSED_RESULT;
/// Generic Post-Roll
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBStartDelay * _Nonnull GenericPostRoll;)
+ (PBStartDelay * _Nonnull)GenericPostRoll SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


/// <h1>OpenRTB - Video Placement Types</h1>
/// \code
/// | Value | Description                  |
/// |-------|------------------------------|
/// | 1     | In-Stream                    |
/// | 2     | In-Banner                    |
/// | 3     | In-Article                   |
/// | 4     | In-Feed                      |
/// | 5     | Interstitial/Slider/Floating |
///
/// \endcode
SWIFT_CLASS_NAMED("Placement")
@interface PBPlacement : SingleContainerInt
/// In-Stream
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlacement * _Nonnull InStream;)
+ (PBPlacement * _Nonnull)InStream SWIFT_WARN_UNUSED_RESULT;
/// In-Banner
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlacement * _Nonnull InBanner;)
+ (PBPlacement * _Nonnull)InBanner SWIFT_WARN_UNUSED_RESULT;
/// In-Article
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlacement * _Nonnull InArticle;)
+ (PBPlacement * _Nonnull)InArticle SWIFT_WARN_UNUSED_RESULT;
/// In-Feed
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlacement * _Nonnull InFeed;)
+ (PBPlacement * _Nonnull)InFeed SWIFT_WARN_UNUSED_RESULT;
/// Interstitial
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlacement * _Nonnull Interstitial;)
+ (PBPlacement * _Nonnull)Interstitial SWIFT_WARN_UNUSED_RESULT;
/// Slider
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlacement * _Nonnull Slider;)
+ (PBPlacement * _Nonnull)Slider SWIFT_WARN_UNUSED_RESULT;
/// Floating
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlacement * _Nonnull Floating;)
+ (PBPlacement * _Nonnull)Floating SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


@class CLLocation;

SWIFT_CLASS("_TtC12PrebidMobile9Targeting")
@interface Targeting : NSObject
@property (nonatomic, copy) NSString * _Nullable storeURL;
@property (nonatomic, copy) NSString * _Nullable domain;
/// The class is created as a singleton object & used
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) Targeting * _Nonnull shared;)
+ (Targeting * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// The initializer that needs to be created only once
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// This property gets the gender enum passed set by the developer
@property (nonatomic) enum Gender gender;
/// The itunes app id for targeting
@property (nonatomic, copy) NSString * _Nullable itunesID;
/// The application location for targeting
@property (nonatomic, strong) CLLocation * _Nullable location;
@property (nonatomic, copy) NSString * _Nullable omidPartnerName;
@property (nonatomic, copy) NSString * _Nullable omidPartnerVersion;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable schain;
- (void)setLocationPrecision:(NSNumber * _Nullable)newValue;
- (NSNumber * _Nullable)getLocationPrecision SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSInteger yearOfBirth;
/// This property gets the year of birth value set by the application developer
- (BOOL)setYearOfBirthWithYob:(NSInteger)yob error:(NSError * _Nullable * _Nullable)error;
/// This property clears year of birth value set by the application developer
- (void)clearYearOfBirth;
/// The boolean value set by the user to collect user data
@property (nonatomic) BOOL subjectToCOPPA;
- (void)setSubjectToGDPR:(NSNumber * _Nullable)newValue;
- (NSNumber * _Nullable)getSubjectToGDPR SWIFT_WARN_UNUSED_RESULT;
/// The consent string for sending the GDPR consent
@property (nonatomic, copy) NSString * _Nullable gdprConsentString;
/// This method allows to save External User Id in the User Defaults
- (void)storeExternalUserId:(ExternalUserId * _Nonnull)externalUserId;
/// This method allows to get All External User Ids from User Defaults
- (NSArray<ExternalUserId *> * _Nullable)fetchStoredExternalUserIds SWIFT_WARN_UNUSED_RESULT;
/// This method allows to get External User Id from User Defaults by passing respective ‘source’ string as param
- (ExternalUserId * _Nullable)fetchStoredExternalUserId:(NSString * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
/// This method allows to remove specific External User Id from User Defaults by passing respective ‘source’ string as param
- (void)removeStoredExternalUserId:(NSString * _Nonnull)source;
/// This method allows to remove all the External User Ids from User Defaults
- (void)removeStoredExternalUserIds;
@property (nonatomic, copy) NSString * _Nullable purposeConsents;
- (NSNumber * _Nullable)getDeviceAccessConsent SWIFT_WARN_UNUSED_RESULT;
/// This method obtains a bidder name allowed to receive global targeting
- (void)addBidderToAccessControlList:(NSString * _Nonnull)bidderName;
/// This method allows to remove specific bidder name
- (void)removeBidderFromAccessControlList:(NSString * _Nonnull)bidderName;
/// This method allows to remove all the bidder name set
- (void)clearAccessControlList;
/// This method obtains the user data keyword & value for global user targeting
/// if the key already exists the value will be appended to the list. No duplicates will be added
- (void)addUserDataWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
/// This method obtains the user data keyword & values set for global user targeting
/// the values if the key already exist will be replaced with the new set of values
- (void)updateUserDataWithKey:(NSString * _Nonnull)key value:(NSSet<NSString *> * _Nonnull)value;
/// This method allows to remove specific user data keyword & value set from global user targeting
- (void)removeUserDataForKey:(NSString * _Nonnull)forKey;
/// This method allows to remove all user data set from global user targeting
- (void)clearUserData;
/// This method obtains the user keyword for global user targeting
/// Inserts the given element in the set if it is not already present.
- (void)addUserKeyword:(NSString * _Nonnull)newElement;
/// This method obtains the user keyword set for global user targeting
/// Adds the elements of the given set to the set.
- (void)addUserKeywords:(NSSet<NSString *> * _Nonnull)newElements;
/// This method allows to remove specific user keyword from global user targeting
- (void)removeUserKeyword:(NSString * _Nonnull)element;
/// This method allows to remove all keywords from the set of global user targeting
- (void)clearUserKeywords;
/// This method obtains the context data keyword & value context for global context targeting
/// if the key already exists the value will be appended to the list. No duplicates will be added
- (void)addContextDataWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
/// This method obtains the context data keyword & values set for global context targeting.
/// the values if the key already exist will be replaced with the new set of values
- (void)updateContextDataWithKey:(NSString * _Nonnull)key value:(NSSet<NSString *> * _Nonnull)value;
/// This method allows to remove specific context data keyword & values set from global context targeting
- (void)removeContextDataForKey:(NSString * _Nonnull)forKey;
/// This method allows to remove all context data set from global context targeting
- (void)clearContextData;
/// This method obtains the context keyword for global context targeting
/// Inserts the given element in the set if it is not already present.
- (void)addContextKeyword:(NSString * _Nonnull)newElement;
/// This method obtains the context keyword set for global context targeting
/// Adds the elements of the given set to the set.
- (void)addContextKeywords:(NSSet<NSString *> * _Nonnull)newElements;
/// This method allows to remove specific context keyword from global context targeting
- (void)removeContextKeyword:(NSString * _Nonnull)element;
/// This method allows to remove all keywords from the set of global context targeting
- (void)clearContextKeywords;
@end




SWIFT_CLASS("_TtC12PrebidMobile5Utils")
@interface Utils : NSObject
/// The class is created as a singleton object & used
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) Utils * _Nonnull shared;)
+ (Utils * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// The initializer that needs to be created only once
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@property (nonatomic, weak) id <NativeAdDelegate> _Nullable delegate;
- (NSString * _Nonnull)convertDictToMoPubKeywordsWithDict:(NSDictionary<NSString *, NSString *> * _Nonnull)dict SWIFT_WARN_UNUSED_RESULT;
- (void)findNativeWithAdObject:(id _Nonnull)adObject;
@end


SWIFT_CLASS("_TtC12PrebidMobile11VideoAdUnit")
@interface VideoAdUnit : VideoBaseAdUnit
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId size:(CGSize)size OBJC_DESIGNATED_INITIALIZER;
- (void)addAdditionalSizeWithSizes:(NSArray<NSValue *> * _Nonnull)sizes;
@end



SWIFT_CLASS("_TtC12PrebidMobile23VideoInterstitialAdUnit")
@interface VideoInterstitialAdUnit : VideoBaseAdUnit
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
#ifndef PREBIDMOBILE_SWIFT_H
#define PREBIDMOBILE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="PrebidMobile",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSString;
enum ResultCode : NSInteger;
@class NSNumber;
@class PBAdUnitContentObject;

SWIFT_CLASS("_TtC12PrebidMobile6AdUnit")
@interface AdUnit : NSObject
@property (nonatomic, copy) NSString * _Nullable pbAdSlot;
- (void)fetchDemandWithCompletion:(void (^ _Nonnull)(enum ResultCode, NSDictionary<NSString *, NSString *> * _Nullable))completion;
- (void)fetchDemandWithAdObject:(id _Nonnull)adObject completion:(void (^ _Nonnull)(enum ResultCode))completion;
/// This method obtains the context data keyword & value for adunit context targeting
/// if the key already exists the value will be appended to the list. No duplicates will be added
- (void)addContextDataWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
/// This method obtains the context data keyword & values for adunit context targeting
/// the values if the key already exist will be replaced with the new set of values
- (void)updateContextDataWithKey:(NSString * _Nonnull)key value:(NSSet<NSString *> * _Nonnull)value;
/// This method allows to remove specific context data keyword & values set from adunit context targeting
- (void)removeContextDataForKey:(NSString * _Nonnull)forKey;
/// This method allows to remove all context data set from adunit context targeting
- (void)clearContextData;
/// This method obtains the context keyword for adunit context targeting
/// Inserts the given element in the set if it is not already present.
- (void)addContextKeyword:(NSString * _Nonnull)newElement;
/// This method obtains the context keyword set for adunit context targeting
/// Adds the elements of the given set to the set.
- (void)addContextKeywords:(NSSet<NSString *> * _Nonnull)newElements;
/// This method allows to remove specific context keyword from adunit context targeting
- (void)removeContextKeyword:(NSString * _Nonnull)element;
/// This method allows to remove all keywords from the set of adunit context targeting
- (void)clearContextKeywords;
/// This method allows to set the auto refresh period for the demand
/// \param time refresh time interval
///
- (void)setAutoRefreshMillisWithTime:(double)time;
/// This method stops the auto refresh of demand
- (void)stopAutoRefresh;
- (void)setAppContentWithAppContent:(PBAdUnitContentObject * _Nonnull)appContent;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIView;

SWIFT_CLASS("_TtC12PrebidMobile11AdViewUtils")
@interface AdViewUtils : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (void)findPrebidCreativeSize:(UIView * _Nonnull)adView success:(void (^ _Nonnull)(CGSize))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
@end

@class PBBannerAdUnitParameters;

SWIFT_CLASS("_TtC12PrebidMobile16BannerBaseAdUnit")
@interface BannerBaseAdUnit : AdUnit
@property (nonatomic, strong) PBBannerAdUnitParameters * _Nullable parameters;
@end

@class PBApi;

/// Describes an <a href="https://www.iab.com/wp-content/uploads/2016/03/OpenRTB-API-Specification-Version-2-5-FINAL.pdf">OpenRTB</a> banner object
SWIFT_CLASS_NAMED("Parameters")
@interface PBBannerAdUnitParameters : NSObject
/// List of supported API frameworks for this impression. If an API is not explicitly listed, it is assumed not to be supported.
@property (nonatomic, copy) NSArray<PBApi *> * _Nullable api;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile12BannerAdUnit")
@interface BannerAdUnit : BannerBaseAdUnit
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId size:(CGSize)size OBJC_DESIGNATED_INITIALIZER;
- (void)addAdditionalSizeWithSizes:(NSArray<NSValue *> * _Nonnull)sizes;
@end



/// Describes an <a href="https://www.iab.com/wp-content/uploads/2016/03/OpenRTB-API-Specification-Version-2-5-FINAL.pdf">OpenRTB</a> app: content object
SWIFT_CLASS_NAMED("ContentObject")
@interface PBAdUnitContentObject : NSObject
@property (nonatomic, copy) NSString * _Nullable url;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile18SingleContainerInt")
@interface SingleContainerInt : NSObject
@property (nonatomic, readonly) NSInteger value;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12PrebidMobile14ContextSubType")
@interface ContextSubType : SingleContainerInt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull General;)
+ (ContextSubType * _Nonnull)General SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull Article;)
+ (ContextSubType * _Nonnull)Article SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull Video;)
+ (ContextSubType * _Nonnull)Video SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull Audio;)
+ (ContextSubType * _Nonnull)Audio SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull Image;)
+ (ContextSubType * _Nonnull)Image SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull UserGenerated;)
+ (ContextSubType * _Nonnull)UserGenerated SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull Social;)
+ (ContextSubType * _Nonnull)Social SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull email;)
+ (ContextSubType * _Nonnull)email SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull chatIM;)
+ (ContextSubType * _Nonnull)chatIM SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull SellingProduct;)
+ (ContextSubType * _Nonnull)SellingProduct SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull AppStore;)
+ (ContextSubType * _Nonnull)AppStore SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull ReviewSite;)
+ (ContextSubType * _Nonnull)ReviewSite SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull Custom;)
+ (ContextSubType * _Nonnull)Custom SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile11ContextType")
@interface ContextType : SingleContainerInt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextType * _Nonnull Content;)
+ (ContextType * _Nonnull)Content SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextType * _Nonnull Social;)
+ (ContextType * _Nonnull)Social SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextType * _Nonnull Product;)
+ (ContextType * _Nonnull)Product SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextType * _Nonnull Custom;)
+ (ContextType * _Nonnull)Custom SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, DataAsset, open) {
  DataAssetSponsored = 1,
  DataAssetDescription = 2,
  DataAssetRating = 3,
  DataAssetLikes = 4,
  DataAssetDownloads = 5,
  DataAssetPrice = 6,
  DataAssetSaleprice = 7,
  DataAssetPhone = 8,
  DataAssetAddress = 9,
  DataAssetDescription2 = 10,
  DataAssetDisplayurl = 11,
  DataAssetCtatext = 12,
  DataAssetCustom = 13,
};


SWIFT_CLASS("_TtC12PrebidMobile13EventTracking")
@interface EventTracking : SingleContainerInt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventTracking * _Nonnull Image;)
+ (EventTracking * _Nonnull)Image SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventTracking * _Nonnull js;)
+ (EventTracking * _Nonnull)js SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventTracking * _Nonnull Custom;)
+ (EventTracking * _Nonnull)Custom SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile9EventType")
@interface EventType : SingleContainerInt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventType * _Nonnull Impression;)
+ (EventType * _Nonnull)Impression SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventType * _Nonnull ViewableImpression50;)
+ (EventType * _Nonnull)ViewableImpression50 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventType * _Nonnull ViewableImpression100;)
+ (EventType * _Nonnull)ViewableImpression100 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventType * _Nonnull ViewableVideoImpression50;)
+ (EventType * _Nonnull)ViewableVideoImpression50 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventType * _Nonnull Custom;)
+ (EventType * _Nonnull)Custom SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end

@class NSCoder;

/// Defines the User Id Object from an External Thrid Party Source
SWIFT_CLASS("_TtC12PrebidMobile14ExternalUserId")
@interface ExternalUserId : NSObject <NSCoding>
@property (nonatomic, copy) NSString * _Nonnull source;
@property (nonatomic, copy) NSString * _Nonnull identifier;
@property (nonatomic, strong) NSNumber * _Nullable atype;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable ext;
/// Initialize ExternalUserId Class
/// \param source Source of the External User Id String.
///
/// \param identifier String of the External User Id.
///
/// \param atype (Optional) Int of the External User Id.
///
/// \param ext (Optional) Dictionary of the External User Id.
///
- (nonnull instancetype)initWithSource:(NSString * _Nonnull)source identifier:(NSString * _Nonnull)identifier atype:(NSNumber * _Nullable)atype ext:(NSDictionary<NSString *, id> * _Nullable)ext OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, Gender, open) {
  GenderUnknown = 0,
  GenderMale = 1,
  GenderFemale = 2,
};

typedef SWIFT_ENUM(NSInteger, IMAAdSlotSize, open) {
  IMAAdSlotSizeSize400x300 = 0,
  IMAAdSlotSizeSize640x480 = 1,
};


SWIFT_CLASS("_TtC12PrebidMobile8IMAUtils")
@interface IMAUtils : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) IMAUtils * _Nonnull shared;)
+ (IMAUtils * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12PrebidMobile10ImageAsset")
@interface ImageAsset : SingleContainerInt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ImageAsset * _Nonnull Icon;)
+ (ImageAsset * _Nonnull)Icon SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ImageAsset * _Nonnull Main;)
+ (ImageAsset * _Nonnull)Main SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextType * _Nonnull Custom;)
+ (ContextType * _Nonnull)Custom SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile18InterstitialAdUnit")
@interface InterstitialAdUnit : BannerBaseAdUnit
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId minWidthPerc:(NSInteger)minWidthPerc minHeightPerc:(NSInteger)minHeightPerc;
@end

typedef SWIFT_ENUM(NSInteger, LogLevel_, open) {
  LogLevel_Debug = 0,
  LogLevel_Verbose = 1,
  LogLevel_Info = 2,
  LogLevel_Warn = 3,
  LogLevel_Error = 4,
  LogLevel_Severe = 5,
};

@protocol NativeAdEventDelegate;

SWIFT_CLASS("_TtC12PrebidMobile8NativeAd")
@interface NativeAd : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable title;
@property (nonatomic, readonly, copy) NSString * _Nullable text;
@property (nonatomic, readonly, copy) NSString * _Nullable iconUrl;
@property (nonatomic, readonly, copy) NSString * _Nullable imageUrl;
@property (nonatomic, readonly, copy) NSString * _Nullable callToAction;
@property (nonatomic, readonly, copy) NSString * _Nullable sponsoredBy;
@property (nonatomic, weak) id <NativeAdEventDelegate> _Nullable delegate;
+ (NativeAd * _Nullable)createWithCacheId:(NSString * _Nonnull)cacheId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (BOOL)registerViewWithView:(UIView * _Nonnull)view clickableViews:(NSArray<UIView *> * _Nullable)clickableViews;
@end


SWIFT_PROTOCOL("_TtP12PrebidMobile16NativeAdDelegate_")
@protocol NativeAdDelegate
/// A successful Prebid Native ad is returned
/// @param ad use this instance for displaying
- (void)nativeAdLoadedWithAd:(NativeAd * _Nonnull)ad;
/// Prebid Native was not found in the server returned response,
/// Please display the ad as regular ways
- (void)nativeAdNotFound;
/// Prebid Native ad was returned, however, the bid is not valid for displaying
/// Should be treated as on ad load failed
- (void)nativeAdNotValid;
@end


SWIFT_PROTOCOL("_TtP12PrebidMobile21NativeAdEventDelegate_")
@protocol NativeAdEventDelegate
@optional
/// Sent when the native ad is expired.
- (void)adDidExpireWithAd:(NativeAd * _Nonnull)ad;
/// Sent when the native view is clicked by the user.
- (void)adWasClickedWithAd:(NativeAd * _Nonnull)ad;
/// Sent when  an impression is recorded for an native ad
- (void)adDidLogImpressionWithAd:(NativeAd * _Nonnull)ad;
@end


SWIFT_CLASS("_TtC12PrebidMobile11NativeAsset")
@interface NativeAsset : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12PrebidMobile15NativeAssetData")
@interface NativeAssetData : NativeAsset
@property (nonatomic, strong) id _Nullable ext;
- (nonnull instancetype)initWithType:(enum DataAsset)type required:(BOOL)required OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithIsRequired:(BOOL)isRequired SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12PrebidMobile16NativeAssetImage")
@interface NativeAssetImage : NativeAsset
@property (nonatomic, strong) ImageAsset * _Nullable type;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable mimes;
@property (nonatomic, strong) id _Nullable ext;
- (nonnull instancetype)initWithMinimumWidth:(NSInteger)minimumWidth minimumHeight:(NSInteger)minimumHeight required:(BOOL)required;
- (nonnull instancetype)initWithIsRequired:(BOOL)isRequired OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile16NativeAssetTitle")
@interface NativeAssetTitle : NativeAsset
@property (nonatomic, strong) id _Nullable ext;
- (nonnull instancetype)initWithLength:(NSInteger)length required:(BOOL)required OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithIsRequired:(BOOL)isRequired SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12PrebidMobile18NativeEventTracker")
@interface NativeEventTracker : NSObject
- (nonnull instancetype)initWithEvent:(EventType * _Nonnull)event methods:(NSArray<EventTracking *> * _Nonnull)methods OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class PlacementType;

SWIFT_CLASS("_TtC12PrebidMobile13NativeRequest")
@interface NativeRequest : AdUnit
@property (nonatomic, strong) ContextType * _Nullable context;
@property (nonatomic, strong) ContextSubType * _Nullable contextSubType;
@property (nonatomic, strong) PlacementType * _Nullable placementType;
@property (nonatomic) NSInteger placementCount;
@property (nonatomic) NSInteger sequence;
@property (nonatomic, copy) NSArray<NativeAsset *> * _Nullable assets;
@property (nonatomic) NSInteger asseturlsupport;
@property (nonatomic) NSInteger durlsupport;
@property (nonatomic, copy) NSArray<NativeEventTracker *> * _Nullable eventtrackers;
@property (nonatomic) NSInteger privacy;
@property (nonatomic, strong) id _Nullable ext;
@property (nonatomic, copy) NSString * _Nullable configId;
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId assets:(NSArray<NativeAsset *> * _Nonnull)assets;
- (NSDictionary * _Nullable)getNativeRequestObject SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC12PrebidMobile13PlacementType")
@interface PlacementType : SingleContainerInt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PlacementType * _Nonnull FeedContent;)
+ (PlacementType * _Nonnull)FeedContent SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PlacementType * _Nonnull AtomicContent;)
+ (PlacementType * _Nonnull)AtomicContent SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PlacementType * _Nonnull OutsideContent;)
+ (PlacementType * _Nonnull)OutsideContent SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PlacementType * _Nonnull RecommendationWidget;)
+ (PlacementType * _Nonnull)RecommendationWidget SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PlacementType * _Nonnull Custom;)
+ (PlacementType * _Nonnull)Custom SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end

enum PrebidHost : NSInteger;

SWIFT_CLASS("_TtC12PrebidMobile6Prebid")
@interface Prebid : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull bidderNameAppNexus;)
+ (NSString * _Nonnull)bidderNameAppNexus SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull bidderNameRubiconProject;)
+ (NSString * _Nonnull)bidderNameRubiconProject SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) NSInteger timeoutMillis;
@property (nonatomic, copy) NSString * _Nonnull prebidServerAccountId;
@property (nonatomic, copy) NSString * _Nonnull storedAuctionResponse;
@property (nonatomic) BOOL pbsDebug;
/// <ul>
///   <li>
///     This property is set by the developer when he is willing to assign the assetID for Native ad.
///   </li>
///   <li>
///   </li>
/// </ul>
@property (nonatomic) BOOL shouldAssignNativeAssetID;
/// <ul>
///   <li>
///     This property is set by the developer when he is willing to share the location for better ad targeting
///   </li>
///   <li>
///   </li>
/// </ul>
@property (nonatomic) BOOL shareGeoLocation;
@property (nonatomic) enum PrebidHost prebidServerHost;
/// Array  containing objects that hold External UserId parameters.
@property (nonatomic, copy) NSArray<ExternalUserId *> * _Nonnull externalUserIdArray;
- (void)setLogLevel:(enum LogLevel_)logLevel;
/// The class is created as a singleton object & used
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) Prebid * _Nonnull shared;)
+ (Prebid * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// The initializer that needs to be created only once
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (BOOL)setCustomPrebidServerWithUrl:(NSString * _Nonnull)url error:(NSError * _Nullable * _Nullable)error;
- (void)addStoredBidResponseWithBidder:(NSString * _Nonnull)bidder responseId:(NSString * _Nonnull)responseId;
- (void)clearStoredBidResponses;
@end

typedef SWIFT_ENUM(NSInteger, PrebidHost, open) {
/// URL <a href="URL">https://prebid.adnxs.com/pbs/v1/openrtb2/auction</a>
  PrebidHostAppnexus = 0,
/// URL <a href="URL">https://prebid-server.rubiconproject.com/openrtb2/auction</a>
  PrebidHostRubicon = 1,
  PrebidHostCustom = 2,
};

typedef SWIFT_ENUM(NSInteger, ResultCode, open) {
  ResultCodePrebidDemandFetchSuccess = 0,
  ResultCodePrebidServerNotSpecified = 1,
  ResultCodePrebidInvalidAccountId = 2,
  ResultCodePrebidInvalidConfigId = 3,
  ResultCodePrebidInvalidSize = 4,
  ResultCodePrebidNetworkError = 5,
  ResultCodePrebidServerURLInvalid = 6,
  ResultCodePrebidServerError = 7,
  ResultCodePrebidDemandNoBids = 8,
  ResultCodePrebidDemandTimedOut = 9,
};

@class PBVideoAdUnitParameters;

SWIFT_CLASS("_TtC12PrebidMobile15VideoBaseAdUnit")
@interface VideoBaseAdUnit : AdUnit
@property (nonatomic, strong) PBVideoAdUnitParameters * _Nullable parameters;
@end

@class PBPlaybackMethod;
@class PBProtocols;
@class PBStartDelay;
@class PBPlacement;

/// Describes an <a href="https://www.iab.com/wp-content/uploads/2016/03/OpenRTB-API-Specification-Version-2-5-FINAL.pdf">OpenRTB</a> video object
SWIFT_CLASS_NAMED("Parameters")
@interface PBVideoAdUnitParameters : NSObject
/// List of supported API frameworks for this impression. If an API is not explicitly listed, it is assumed not to be supported.
@property (nonatomic, copy) NSArray<PBApi *> * _Nullable api;
/// Maximum bit rate in Kbps.
@property (nonatomic, strong) SingleContainerInt * _Nullable maxBitrate;
/// Maximum bit rate in Kbps.
@property (nonatomic, strong) SingleContainerInt * _Nullable minBitrate;
/// Maximum video ad duration in seconds.
@property (nonatomic, strong) SingleContainerInt * _Nullable maxDuration;
/// Minimum video ad duration in seconds.
@property (nonatomic, strong) SingleContainerInt * _Nullable minDuration;
/// Content MIME types supported
/// <h1>Example</h1>
/// <ul>
///   <li>
///     “video/mp4”
///   </li>
///   <li>
///     “video/x-ms-wmv”
///   </li>
/// </ul>
@property (nonatomic, copy) NSArray<NSString *> * _Nullable mimes;
/// Allowed playback methods. If none specified, assume all are allowed.
@property (nonatomic, copy) NSArray<PBPlaybackMethod *> * _Nullable playbackMethod;
/// Array of supported video bid response protocols.
@property (nonatomic, copy) NSArray<PBProtocols *> * _Nullable protocols;
/// Indicates the start delay in seconds for pre-roll, mid-roll, or post-roll ad placements.
@property (nonatomic, strong) PBStartDelay * _Nullable startDelay;
/// Placement type for the impression.
@property (nonatomic, strong) PBPlacement * _Nullable placement;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile19RewardedVideoAdUnit")
@interface RewardedVideoAdUnit : VideoBaseAdUnit
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile7Signals")
@interface Signals : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// <h1>OpenRTB - API Frameworks</h1>
/// \code
/// | Value | Description |
/// |-------|-------------|
/// | 1     | VPAID 1.0   |
/// | 2     | VPAID 2.0   |
/// | 3     | MRAID-1     |
/// | 4     | ORMMA       |
/// | 5     | MRAID-2     |
/// | 6     | MRAID-3     |
/// | 7     | OMID-1      |
///
/// \endcode
SWIFT_CLASS_NAMED("Api")
@interface PBApi : SingleContainerInt
/// VPAID 1.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBApi * _Nonnull VPAID_1;)
+ (PBApi * _Nonnull)VPAID_1 SWIFT_WARN_UNUSED_RESULT;
/// VPAID 2.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBApi * _Nonnull VPAID_2;)
+ (PBApi * _Nonnull)VPAID_2 SWIFT_WARN_UNUSED_RESULT;
/// MRAID-1
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBApi * _Nonnull MRAID_1;)
+ (PBApi * _Nonnull)MRAID_1 SWIFT_WARN_UNUSED_RESULT;
/// ORMMA
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBApi * _Nonnull ORMMA;)
+ (PBApi * _Nonnull)ORMMA SWIFT_WARN_UNUSED_RESULT;
/// MRAID-2
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBApi * _Nonnull MRAID_2;)
+ (PBApi * _Nonnull)MRAID_2 SWIFT_WARN_UNUSED_RESULT;
/// MRAID-3
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBApi * _Nonnull MRAID_3;)
+ (PBApi * _Nonnull)MRAID_3 SWIFT_WARN_UNUSED_RESULT;
/// OMID-1
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBApi * _Nonnull OMID_1;)
+ (PBApi * _Nonnull)OMID_1 SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


/// <h1>OpenRTB - Playback Methods</h1>
/// \code
/// | Value | Description                                              |
/// |-------|----------------------------------------------------------|
/// | 1     | Initiates on Page Load with Sound On                     |
/// | 2     | Initiates on Page Load with Sound Off by Default         |
/// | 3     | Initiates on Click with Sound On                         |
/// | 4     | Initiates on Mouse-Over with Sound On                    |
/// | 5     | Initiates on Entering Viewport with Sound On             |
/// | 6     | Initiates on Entering Viewport with Sound Off by Default |
///
/// \endcode
SWIFT_CLASS_NAMED("PlaybackMethod")
@interface PBPlaybackMethod : SingleContainerInt
/// Initiates on Page Load with Sound On
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlaybackMethod * _Nonnull AutoPlaySoundOn;)
+ (PBPlaybackMethod * _Nonnull)AutoPlaySoundOn SWIFT_WARN_UNUSED_RESULT;
/// Initiates on Page Load with Sound Off by Default
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlaybackMethod * _Nonnull AutoPlaySoundOff;)
+ (PBPlaybackMethod * _Nonnull)AutoPlaySoundOff SWIFT_WARN_UNUSED_RESULT;
/// Initiates on Click with Sound On
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlaybackMethod * _Nonnull ClickToPlay;)
+ (PBPlaybackMethod * _Nonnull)ClickToPlay SWIFT_WARN_UNUSED_RESULT;
/// Initiates on Mouse-Over with Sound On
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlaybackMethod * _Nonnull MouseOver;)
+ (PBPlaybackMethod * _Nonnull)MouseOver SWIFT_WARN_UNUSED_RESULT;
/// Initiates on Entering Viewport with Sound On
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlaybackMethod * _Nonnull EnterSoundOn;)
+ (PBPlaybackMethod * _Nonnull)EnterSoundOn SWIFT_WARN_UNUSED_RESULT;
/// Initiates on Entering Viewport with Sound Off by Default
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlaybackMethod * _Nonnull EnterSoundOff;)
+ (PBPlaybackMethod * _Nonnull)EnterSoundOff SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


/// <h1>OpenRTB - Protocols</h1>
/// \code
/// | Value | Description       |
/// |-------|-------------------|
/// | 1     | VAST 1.0          |
/// | 2     | VAST 2.0          |
/// | 3     | VAST 3.0          |
/// | 4     | VAST 1.0 Wrapper  |
/// | 5     | VAST 2.0 Wrapper  |
/// | 6     | VAST 3.0 Wrapper  |
/// | 7     | VAST 4.0          |
/// | 8     | VAST 4.0 Wrapper  |
/// | 9     | DAAST 1.0         |
/// | 10    | DAAST 1.0 Wrapper |
///
/// \endcode
SWIFT_CLASS_NAMED("Protocols")
@interface PBProtocols : SingleContainerInt
/// VAST 1.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_1_0;)
+ (PBProtocols * _Nonnull)VAST_1_0 SWIFT_WARN_UNUSED_RESULT;
/// VAST 2.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_2_0;)
+ (PBProtocols * _Nonnull)VAST_2_0 SWIFT_WARN_UNUSED_RESULT;
/// VAST 3.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_3_0;)
+ (PBProtocols * _Nonnull)VAST_3_0 SWIFT_WARN_UNUSED_RESULT;
/// VAST 1.0 Wrapper
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_1_0_Wrapper;)
+ (PBProtocols * _Nonnull)VAST_1_0_Wrapper SWIFT_WARN_UNUSED_RESULT;
/// VAST 2.0 Wrapper
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_2_0_Wrapper;)
+ (PBProtocols * _Nonnull)VAST_2_0_Wrapper SWIFT_WARN_UNUSED_RESULT;
/// VAST 3.0 Wrapper
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_3_0_Wrapper;)
+ (PBProtocols * _Nonnull)VAST_3_0_Wrapper SWIFT_WARN_UNUSED_RESULT;
/// VAST 4.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_4_0;)
+ (PBProtocols * _Nonnull)VAST_4_0 SWIFT_WARN_UNUSED_RESULT;
/// VAST 4.0 Wrapper
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_4_0_Wrapper;)
+ (PBProtocols * _Nonnull)VAST_4_0_Wrapper SWIFT_WARN_UNUSED_RESULT;
/// DAAST 1.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull DAAST_1_0;)
+ (PBProtocols * _Nonnull)DAAST_1_0 SWIFT_WARN_UNUSED_RESULT;
/// DAAST 1.0 Wrapper
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull DAAST_1_0_WRAPPER;)
+ (PBProtocols * _Nonnull)DAAST_1_0_WRAPPER SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


/// <h1>OpenRTB - Start Delay</h1>
/// \code
/// | Value | Description                                      |
/// |-------|--------------------------------------------------|
/// | > 0   | Mid-Roll (value indicates start delay in second) |
/// | 0     | Pre-Roll                                         |
/// | -1    | Generic Mid-Roll                                 |
/// | -2    | Generic Post-Roll                                |
///
/// \endcode
SWIFT_CLASS_NAMED("StartDelay")
@interface PBStartDelay : SingleContainerInt
/// Pre-Roll
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBStartDelay * _Nonnull PreRoll;)
+ (PBStartDelay * _Nonnull)PreRoll SWIFT_WARN_UNUSED_RESULT;
/// Generic Mid-Roll
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBStartDelay * _Nonnull GenericMidRoll;)
+ (PBStartDelay * _Nonnull)GenericMidRoll SWIFT_WARN_UNUSED_RESULT;
/// Generic Post-Roll
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBStartDelay * _Nonnull GenericPostRoll;)
+ (PBStartDelay * _Nonnull)GenericPostRoll SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


/// <h1>OpenRTB - Video Placement Types</h1>
/// \code
/// | Value | Description                  |
/// |-------|------------------------------|
/// | 1     | In-Stream                    |
/// | 2     | In-Banner                    |
/// | 3     | In-Article                   |
/// | 4     | In-Feed                      |
/// | 5     | Interstitial/Slider/Floating |
///
/// \endcode
SWIFT_CLASS_NAMED("Placement")
@interface PBPlacement : SingleContainerInt
/// In-Stream
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlacement * _Nonnull InStream;)
+ (PBPlacement * _Nonnull)InStream SWIFT_WARN_UNUSED_RESULT;
/// In-Banner
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlacement * _Nonnull InBanner;)
+ (PBPlacement * _Nonnull)InBanner SWIFT_WARN_UNUSED_RESULT;
/// In-Article
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlacement * _Nonnull InArticle;)
+ (PBPlacement * _Nonnull)InArticle SWIFT_WARN_UNUSED_RESULT;
/// In-Feed
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlacement * _Nonnull InFeed;)
+ (PBPlacement * _Nonnull)InFeed SWIFT_WARN_UNUSED_RESULT;
/// Interstitial
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlacement * _Nonnull Interstitial;)
+ (PBPlacement * _Nonnull)Interstitial SWIFT_WARN_UNUSED_RESULT;
/// Slider
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlacement * _Nonnull Slider;)
+ (PBPlacement * _Nonnull)Slider SWIFT_WARN_UNUSED_RESULT;
/// Floating
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlacement * _Nonnull Floating;)
+ (PBPlacement * _Nonnull)Floating SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


@class CLLocation;

SWIFT_CLASS("_TtC12PrebidMobile9Targeting")
@interface Targeting : NSObject
@property (nonatomic, copy) NSString * _Nullable storeURL;
@property (nonatomic, copy) NSString * _Nullable domain;
/// The class is created as a singleton object & used
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) Targeting * _Nonnull shared;)
+ (Targeting * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// The initializer that needs to be created only once
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// This property gets the gender enum passed set by the developer
@property (nonatomic) enum Gender gender;
/// The itunes app id for targeting
@property (nonatomic, copy) NSString * _Nullable itunesID;
/// The application location for targeting
@property (nonatomic, strong) CLLocation * _Nullable location;
@property (nonatomic, copy) NSString * _Nullable omidPartnerName;
@property (nonatomic, copy) NSString * _Nullable omidPartnerVersion;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable schain;
- (void)setLocationPrecision:(NSNumber * _Nullable)newValue;
- (NSNumber * _Nullable)getLocationPrecision SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSInteger yearOfBirth;
/// This property gets the year of birth value set by the application developer
- (BOOL)setYearOfBirthWithYob:(NSInteger)yob error:(NSError * _Nullable * _Nullable)error;
/// This property clears year of birth value set by the application developer
- (void)clearYearOfBirth;
/// The boolean value set by the user to collect user data
@property (nonatomic) BOOL subjectToCOPPA;
- (void)setSubjectToGDPR:(NSNumber * _Nullable)newValue;
- (NSNumber * _Nullable)getSubjectToGDPR SWIFT_WARN_UNUSED_RESULT;
/// The consent string for sending the GDPR consent
@property (nonatomic, copy) NSString * _Nullable gdprConsentString;
/// This method allows to save External User Id in the User Defaults
- (void)storeExternalUserId:(ExternalUserId * _Nonnull)externalUserId;
/// This method allows to get All External User Ids from User Defaults
- (NSArray<ExternalUserId *> * _Nullable)fetchStoredExternalUserIds SWIFT_WARN_UNUSED_RESULT;
/// This method allows to get External User Id from User Defaults by passing respective ‘source’ string as param
- (ExternalUserId * _Nullable)fetchStoredExternalUserId:(NSString * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
/// This method allows to remove specific External User Id from User Defaults by passing respective ‘source’ string as param
- (void)removeStoredExternalUserId:(NSString * _Nonnull)source;
/// This method allows to remove all the External User Ids from User Defaults
- (void)removeStoredExternalUserIds;
@property (nonatomic, copy) NSString * _Nullable purposeConsents;
- (NSNumber * _Nullable)getDeviceAccessConsent SWIFT_WARN_UNUSED_RESULT;
/// This method obtains a bidder name allowed to receive global targeting
- (void)addBidderToAccessControlList:(NSString * _Nonnull)bidderName;
/// This method allows to remove specific bidder name
- (void)removeBidderFromAccessControlList:(NSString * _Nonnull)bidderName;
/// This method allows to remove all the bidder name set
- (void)clearAccessControlList;
/// This method obtains the user data keyword & value for global user targeting
/// if the key already exists the value will be appended to the list. No duplicates will be added
- (void)addUserDataWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
/// This method obtains the user data keyword & values set for global user targeting
/// the values if the key already exist will be replaced with the new set of values
- (void)updateUserDataWithKey:(NSString * _Nonnull)key value:(NSSet<NSString *> * _Nonnull)value;
/// This method allows to remove specific user data keyword & value set from global user targeting
- (void)removeUserDataForKey:(NSString * _Nonnull)forKey;
/// This method allows to remove all user data set from global user targeting
- (void)clearUserData;
/// This method obtains the user keyword for global user targeting
/// Inserts the given element in the set if it is not already present.
- (void)addUserKeyword:(NSString * _Nonnull)newElement;
/// This method obtains the user keyword set for global user targeting
/// Adds the elements of the given set to the set.
- (void)addUserKeywords:(NSSet<NSString *> * _Nonnull)newElements;
/// This method allows to remove specific user keyword from global user targeting
- (void)removeUserKeyword:(NSString * _Nonnull)element;
/// This method allows to remove all keywords from the set of global user targeting
- (void)clearUserKeywords;
/// This method obtains the context data keyword & value context for global context targeting
/// if the key already exists the value will be appended to the list. No duplicates will be added
- (void)addContextDataWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
/// This method obtains the context data keyword & values set for global context targeting.
/// the values if the key already exist will be replaced with the new set of values
- (void)updateContextDataWithKey:(NSString * _Nonnull)key value:(NSSet<NSString *> * _Nonnull)value;
/// This method allows to remove specific context data keyword & values set from global context targeting
- (void)removeContextDataForKey:(NSString * _Nonnull)forKey;
/// This method allows to remove all context data set from global context targeting
- (void)clearContextData;
/// This method obtains the context keyword for global context targeting
/// Inserts the given element in the set if it is not already present.
- (void)addContextKeyword:(NSString * _Nonnull)newElement;
/// This method obtains the context keyword set for global context targeting
/// Adds the elements of the given set to the set.
- (void)addContextKeywords:(NSSet<NSString *> * _Nonnull)newElements;
/// This method allows to remove specific context keyword from global context targeting
- (void)removeContextKeyword:(NSString * _Nonnull)element;
/// This method allows to remove all keywords from the set of global context targeting
- (void)clearContextKeywords;
@end




SWIFT_CLASS("_TtC12PrebidMobile5Utils")
@interface Utils : NSObject
/// The class is created as a singleton object & used
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) Utils * _Nonnull shared;)
+ (Utils * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// The initializer that needs to be created only once
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@property (nonatomic, weak) id <NativeAdDelegate> _Nullable delegate;
- (NSString * _Nonnull)convertDictToMoPubKeywordsWithDict:(NSDictionary<NSString *, NSString *> * _Nonnull)dict SWIFT_WARN_UNUSED_RESULT;
- (void)findNativeWithAdObject:(id _Nonnull)adObject;
@end


SWIFT_CLASS("_TtC12PrebidMobile11VideoAdUnit")
@interface VideoAdUnit : VideoBaseAdUnit
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId size:(CGSize)size OBJC_DESIGNATED_INITIALIZER;
- (void)addAdditionalSizeWithSizes:(NSArray<NSValue *> * _Nonnull)sizes;
@end



SWIFT_CLASS("_TtC12PrebidMobile23VideoInterstitialAdUnit")
@interface VideoInterstitialAdUnit : VideoBaseAdUnit
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
